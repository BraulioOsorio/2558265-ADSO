/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package principal;

import com.google.gson.Gson;
import com.google.gson.JsonArray;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import java.awt.Color;
import java.util.HashMap;
import java.util.Map;
import javax.swing.JOptionPane;

/**
 *
 * @author INSTRUCTOR
 */
public class CrearParqueadero extends javax.swing.JPanel {

    ConsumoAPI conexion = new ConsumoAPI();
    Gson gson = new Gson();

    /**
     * Creates new form CrearParqueadero
     */
    public CrearParqueadero() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        etq_nombre = new javax.swing.JLabel();
        campo_nombre = new javax.swing.JTextField();
        etq_direccion = new javax.swing.JLabel();
        campo_direccion = new javax.swing.JTextField();
        btn_crear_parqueadero = new javax.swing.JButton();
        etq_mensaje = new javax.swing.JLabel();

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Crear Parqueadero");
        jLabel1.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 3, 0, new java.awt.Color(49, 138, 222)));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        etq_nombre.setFont(new java.awt.Font("Roboto", 1, 18)); // NOI18N
        etq_nombre.setForeground(new java.awt.Color(49, 138, 222));
        etq_nombre.setText("NOMBRE:");

        campo_nombre.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        campo_nombre.setForeground(Color.decode("#318ade"));
        campo_nombre.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, Color.decode("#318ade")));
        campo_nombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                campo_nombreKeyPressed(evt);
            }
        });

        etq_direccion.setFont(new java.awt.Font("Roboto", 1, 18)); // NOI18N
        etq_direccion.setForeground(new java.awt.Color(49, 138, 222));
        etq_direccion.setText("DIRECCIÃ“N:");

        campo_direccion.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        campo_direccion.setForeground(Color.decode("#318ade"));
        campo_direccion.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, Color.decode("#318ade")));
        campo_direccion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                campo_direccionKeyPressed(evt);
            }
        });

        btn_crear_parqueadero.setBackground(Color.decode("#318ade"));
        btn_crear_parqueadero.setFont(new java.awt.Font("Roboto", 1, 18)); // NOI18N
        btn_crear_parqueadero.setForeground(new java.awt.Color(255, 255, 255));
        btn_crear_parqueadero.setText("CREAR");
        btn_crear_parqueadero.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_crear_parqueadero.setFocusable(false);
        btn_crear_parqueadero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_crear_parqueaderoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(85, 85, 85)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(etq_nombre)
                            .addComponent(etq_direccion)
                            .addComponent(campo_nombre)
                            .addComponent(campo_direccion, javax.swing.GroupLayout.PREFERRED_SIZE, 343, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(180, 180, 180)
                        .addComponent(btn_crear_parqueadero, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(86, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addComponent(etq_nombre)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(campo_nombre, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(etq_direccion)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(campo_direccion, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btn_crear_parqueadero, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(208, Short.MAX_VALUE))
        );

        etq_mensaje.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        etq_mensaje.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(etq_mensaje, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 102, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(99, 99, 99))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 477, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(110, 110, 110))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(etq_mensaje, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btn_crear_parqueaderoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_crear_parqueaderoActionPerformed
        agregarParqueadero();
    }//GEN-LAST:event_btn_crear_parqueaderoActionPerformed

    private void campo_direccionKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_campo_direccionKeyPressed
        if (evt.getKeyChar() == '\n') {
            System.out.println("Se presiono enter en campo direccion");
            agregarParqueadero();
        }
    }//GEN-LAST:event_campo_direccionKeyPressed

    private void campo_nombreKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_campo_nombreKeyPressed
        if (evt.getKeyChar() == '\n') {
            System.out.println("Se presiono enter en campo nombre");
            agregarParqueadero();
        }
    }//GEN-LAST:event_campo_nombreKeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_crear_parqueadero;
    private javax.swing.JTextField campo_direccion;
    private javax.swing.JTextField campo_nombre;
    private javax.swing.JLabel etq_direccion;
    private javax.swing.JLabel etq_mensaje;
    private javax.swing.JLabel etq_nombre;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    // End of variables declaration//GEN-END:variables

    private void agregarParqueadero() {
        System.out.println("agregarPaqueadero");
        etq_mensaje.setText("");
        String nombre = campo_nombre.getText();
        String direccion = campo_direccion.getText();

        if (!nombre.equals("") && !direccion.equals("")) {
            System.out.println(nombre + " " + direccion);
            Map<String, String> datosParqueadero = new HashMap<>();
            datosParqueadero.put("nombre", nombre);
            datosParqueadero.put("direccion", direccion);

            if (verificarNombreUnico(nombre)) {
                try {
                    String temporal = conexion.consumoPOST("http://localhost/APIparqueadero/parqueaderos/Insert.php", datosParqueadero);

                    JsonObject jsonObject = gson.fromJson(temporal, JsonObject.class);
                    System.out.println(jsonObject);

                    if (jsonObject.get("status").getAsBoolean()) {
                        etq_mensaje.setText("Parqueadero " + nombre + " creado.");
                        campo_nombre.setText("");
                        campo_direccion.setText("");
                    } else {
                        etq_mensaje.setText("Algo ocurriÃ³, intentalo de nuevo.");
                    }
                } catch (Exception e) {
                    e.printStackTrace();
                    JOptionPane.showMessageDialog(null, "Intentalo de nuevo");
                }
            } else {
                etq_mensaje.setText("Ya existe un parqueadero registrado con " + nombre);
                campo_nombre.setText("");
            }

        } else {
            JOptionPane.showMessageDialog(null, "Todos los campos son requeridos");
        }
    }

    public boolean verificarNombreUnico(String nombre) {
        boolean isUnico = false;

        Map<String, String> dataPost = new HashMap<>();
        dataPost.put("nombre", nombre);
        try {
            String response = conexion.consumoPOST("http://localhost/APIparqueadero/parqueaderos/BuscarParqueadero.php", dataPost);
            System.out.println("respuesta: "+response);
            JsonObject jsonObject = gson.fromJson(response, JsonObject.class);
            System.out.println(jsonObject);

            JsonArray registros = jsonObject.getAsJsonArray("parqueadero");
            //!registros.isEmpty()
            //registros != null


            if (registros.isEmpty()) {
                isUnico = true;
            }
        } catch (Exception e) {
            System.out.println("error al obtener el parqueadero");
        }

        return isUnico;
    }

}
